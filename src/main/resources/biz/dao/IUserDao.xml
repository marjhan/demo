<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.dao.IUserDao">
	<resultMap id="BaseResultMap" type="biz.domain.User">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="password" jdbcType="VARCHAR" property="passWord" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="motify_time" jdbcType="TIMESTAMP" property="motifyTime" />
		<result column="user_status" jdbcType="CHAR" property="userStatus" />
		<result column="role_id" jdbcType="INTEGER" property="roleId" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, password, real_name, create_time, motify_time,
		user_status, role_id
	</sql>

	<sql id="Base_From">
		from user
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<include refid="Base_From" />
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectByUserName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<include refid="Base_From" />
		where user_name = #{userName}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="biz.domain.User">
		insert into user (user_id, user_name, password,
		real_name, create_time, motify_time,
		user_status, role_id)
		values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{motifyTime,jdbcType=TIMESTAMP},
		#{userStatus,jdbcType=CHAR}, #{roleId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="biz.domain.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="motifyTime != null">
				motify_time,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="motifyTime != null">
				#{motifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=CHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="biz.domain.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="motifyTime != null">
				motify_time = #{motifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=CHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="biz.domain.User">
		update user
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		real_name = #{realName,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		motify_time = #{motifyTime,jdbcType=TIMESTAMP},
		user_status = #{userStatus,jdbcType=CHAR},
		role_id = #{roleId,jdbcType=INTEGER}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
</mapper>