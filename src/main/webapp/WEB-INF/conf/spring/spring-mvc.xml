<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="biz" />
	<!-- <context:component-scan base-package="com.hundsun.openplat"> <context:include-filter 
		type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter> 
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"></context:include-filter> 
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"></context:include-filter> 
		</context:component-scan> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/conf/freePath.properties</value>
				<value>classpath*:conf/app.properties</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 
		/> JSON转换器 </list> </property> </bean> -->

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 视图模式配置,velocity配置文件 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/views" />
		<property name="configLocation" value="/WEB-INF/conf/velocity.properties" />
		<property name="velocityProperties">
            <props>
                <prop key="input.encoding">utf-8</prop>
                <prop key="output.encoding">utf-8</prop>
            </props>
        </property>
	</bean>

	<!-- 配置后缀 -->
	<bean id="velocityViewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="contentType">
            <value>text/html;charset=utf-8</value>
        </property>
		<property name="prefix" value="/screen/" />
		<property name="suffix" value=".vm" />
	</bean>

	<!-- 会话管拦截器 -->
	<bean id="sessionInterceptor" class="biz.interceptor.SessionInterceptor">
		<property name="sessionProvider" ref="sessionProvider" />
	</bean>
	<!-- 会话通道提供者 -->
	<bean id="sessionProvider" class="biz.session.provider.HttpSessionProvider" />
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"> 
			改变语言时所用的参数名称 <property name="paramName" value="lang" /> </bean> <bean id="brokersInterceptor" 
			class="biz.web.url.URLBrokerLauncherInterceptor"> <property name="brokers"> 
			<map> <entry key="appServer" value-ref="appServerBroker"></entry> </map> 
			</property> </bean> -->

		<mvc:interceptor>
			<mvc:mapping path="/sts/**/*.json" />
			<mvc:mapping path="/sts/**/*.html" />
			<ref bean="sessionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- URLBrokers -->
	<!-- <bean id="appServerBroker" class="biz.web.url.URLBroker"> <property 
		name="encoding" value="UTF-8"></property> <property name="config"> <bean 
		class="biz.web.url.URLConfig"> <property name="host" value="localhos"></property> 
		<property name="port" value="8080"></property> <property name="followContextPath" 
		value="false"></property> </bean> </property> </bean> <bean class="biz.web.url.ServletContextInitHelper"> 
		<property name="brokers"> <list> <ref bean="appServerBroker" /> </list> </property> 
		</bean> -->

	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"> 
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" 
		/> </bean> -->

</beans>  